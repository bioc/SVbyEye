% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_miropeats.R
\name{geom_miropeats}
\alias{geom_miropeats}
\title{A 'ggplot2' geom to draw genomic alignments in a miropeats style.}
\usage{
geom_miropeats(
  mapping = NULL,
  data = NULL,
  geom = "polygon",
  stat = "miropeats",
  position = "identity",
  n = 100,
  na.rm = FALSE,
  strength = 0.5,
  show.legend = NA,
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping, data, stat, position, na.rm, show.legend, inherit.aes, ...}{As is standard for ggplot2.}

\item{geom}{The geometric object to use to display the data, either as a
\code{ggproto} \code{Geom} subclass or as a string naming the geom stripped of the
\code{geom_} prefix (e.g. \code{"point"} rather than \code{"geom_point"})}

\item{n}{The number of points to create for each alignment polygon (Default : `100`).}

\item{strength}{The proportion to move the control point along the y-axis
towards the other end of the alignment polygon (Default : `0.5`).}
}
\value{
Plotting coordinates
}
\description{
`geom_miropeats()` draws miropeat style polygons between query to target genomic alignments.
}
\details{
This geom draws polygons between query to target alignments defined in PAF format.
Such alignments are first loaded using \code{\link{readPaf}} function into a \code{tibble} object.
Then loaded alignments are converted into the plotting coordinates using \code{\link{paf2coords}} function.
molecule. Resulting \code{data.frame} object contains required aesthetics `x` and `y` coordinates as well as
`group` field that is required in order to determine which coordinates represent a single alignment.
}
\section{Aesthetics}{

`geom_miropeats()` require or can take the following aesthetics
(required aesthetics are in bold):

- **x**
- **y**
- **group**
- color
- linewidth
- linetype
- alpha
- fill
- size
}

\examples{
## Get PAF to plot
paf.file <- system.file("extdata", "test1.paf", package = "SVbyEye")
## Read in PAF
paf.table <- readPaf(paf.file = paf.file, include.paf.tags = TRUE, restrict.paf.tags = "cg")
## Convert PAF alignments to plotting coordinates
coords <- paf2coords(paf.table = paf.table)
## Make a plot
ggplot2::ggplot(coords) +
    geom_miropeats(ggplot2::aes(x, y, group = group, fill = direction), alpha = 0.5)

}
\seealso{
[readPaf()], [paf2coords()]
}
\author{
David Porubsky
}
