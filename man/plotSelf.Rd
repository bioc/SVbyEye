% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotSelf.R
\name{plotSelf}
\alias{plotSelf}
\title{Make a horizontal sequence self-alignments.}
\usage{
plotSelf(
  paf.table = NULL,
  min.deletion.size = NULL,
  min.insertion.size = NULL,
  highlight.sv = NULL,
  binsize = NULL,
  shape = "segment",
  sort.by = "position",
  color.by = "direction",
  color.palette = NULL,
  add.alignment.arrows = TRUE,
  highlight.pos = NULL,
  highlight.region = NULL
)
}
\arguments{
\item{paf.table}{A \code{data.frame} or \code{tibble} containing a single or multiple PAF record(s) with 12 mandatory columns
along with CIGAR string defined in 'cg' column.}

\item{min.deletion.size}{A minimum size (in base pairs) of a deletion to be retained.}

\item{min.insertion.size}{A minimum size (in base pairs) of an insertion to be retained.}

\item{highlight.sv}{Visualize alignment embedded structural variation either as an outlined ('outline') or filled ('fill') miropeats.}

\item{binsize}{A size of a bin in base pairs to split a PAF alignment into.}

\item{shape}{A shape used to plot aligned sequences: Either 'segment', 'arc' or 'arrow'.}

\item{sort.by}{Order PAF alignments by relative left-most coordinates ('position') or by the alignment length ('length').}

\item{color.by}{Color alignments either by directionality ('direction'), fraction of matched base pairs ('identity'),
or a custom column name present in submitted `paf.table`.}

\item{color.palette}{A discrete color palette defined as named character vector (elements = colors, names = discrete levels)
to color alignment directionality, `[default: color.palette <- c('-' = 'cornflowerblue', '+' = 'forestgreen')]`.}

\item{add.alignment.arrows}{Set to \code{FALSE} if alignment arrows should not be added to the plot.}

\item{highlight.pos}{A single or a set of positions to be highlighted as vertical solid lines.}

\item{highlight.region}{A pair of positions to be highlighted as vertical range.}
}
\value{
A \code{ggplot2} object.
}
\description{
This function takes self-alignment coordinates generated by 'minimap2' aligner and
visualize them either as horizontal 'dotplot' or arcs.
}
\examples{
## Get PAF to plot
paf.file <- system.file("extdata", "test2.paf", package = "SVbyEye")
## Read in PAF
paf.table <- readPaf(paf.file = paf.file, include.paf.tags = TRUE, restrict.paf.tags = "cg")
## Make a plot
## Plot alignment as horizontal dotplots and color by alignment directionality
plotSelf(paf.table = paf.table, color.by = "direction", shape = "segment")
## Plot alignment as arcs and color by alignment directionality
plotSelf(paf.table = paf.table, color.by = "direction", shape = "arc")
## Plot alignment as arrows and color by alignment directionality
plotSelf(paf.table = paf.table, color.by = "direction", shape = "arrow")
## Highlight structural variants within segemnt shapes
plotSelf(
    paf.table = paf.table, min.deletion.size = 50, min.insertion.size = 50,
    highlight.sv = "outline"
)
## Highlight structural variants within arc shapes
plotSelf(
    paf.table = paf.table, min.deletion.size = 50, min.insertion.size = 50,
    highlight.sv = "outline", shape = "arc"
)
## Highlight structural variants within arrow shapes
plotSelf(
    paf.table = paf.table, min.deletion.size = 50, min.insertion.size = 50,
    highlight.sv = "outline", shape = "arrow"
)
## Bin PAF alignments into user defined bin and color them by sequence identity (\% of matched bases)
plotSelf(paf.table = paf.table, binsize = 1000)
plotSelf(paf.table = paf.table, binsize = 1000, shape = "arc")
## Add annotation to self-alignments ##
annot.file <- system.file("extdata", "test2.sd.annot.RData", package = "SVbyEye")
annot.gr <- get(load(annot.file))
plt <- plotSelf(paf.table = paf.table, color.by = "direction", shape = "arc")
## Add annotation to a new level
addAnnotation(ggplot.obj = plt, annot.gr = annot.gr, coordinate.space = "self")
## Add annotation to the alignment level
plt <- plotSelf(
    paf.table = paf.table, color.by = "direction", shape = "arc",
    add.alignment.arrows = FALSE
)
addAnnotation(
    ggplot.obj = plt, annot.gr = annot.gr, coordinate.space = "self",
    annotation.level = 0
)

}
\author{
David Porubsky
}
