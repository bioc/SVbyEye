% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addSelfAlignments.R
\name{addSelfAlignments}
\alias{addSelfAlignments}
\title{Add PAF self-alignments to a SVbyEye miropeat style plot.}
\usage{
addSelfAlignments(
  ggplot.obj = NULL,
  paf.table = NULL,
  color.by = "direction",
  color.palette = NULL,
  coordinate.space = "target",
  annotation.level = 0.05,
  annotation.label = NULL
)
}
\arguments{
\item{ggplot.obj}{A \code{ggplot2} object generated using \code{\link{plotMiro}} function.}

\item{paf.table}{A \code{data.frame} or \code{tibble} containing a single or multiple PAF record(s) with 12 mandatory columns
along with CIGAR string defined in 'cg' column.}

\item{color.by}{Color alignments either by directionality ('direction'), fraction of matched base pairs ('identity'),
or a custom column name present in submitted `paf.table`.}

\item{color.palette}{A discrete color palette defined as named character vector (elements = colors, names = discrete levels).}

\item{coordinate.space}{A coordinate space ranges in 'annot.gr' are reported, either 'target', 'query' or 'self'.}

\item{annotation.level}{A \code{numeric} that defines a fraction of y-axis to be the y-axis position for the annotation track (Default : `0.05`).}

\item{annotation.label}{A \code{character} string to be used as a label to added annotation track.}
}
\value{
A \code{ggplot2} object.
}
\description{
This function takes a \code{ggplot2} object generated using \code{\link{plotMiro}} function and adds PAF self-alignments
stored in the `paf.table` to the plot.
}
\examples{
## Get PAF to process ##
paf.file <- system.file("extdata", "test1.paf", package = "SVbyEye")
## Read in PAF
paf.table <- readPaf(paf.file = paf.file, include.paf.tags = TRUE, restrict.paf.tags = "cg")
## Make a plot
plt <- plotMiro(paf.table = paf.table)
## Create custom PAF alignments
paf.annot <- tibble::tibble(q.name = 'target.region',
                            q.len = 0,
                            q.start = c(19000000, 19200000),
                            q.end = c(19100000, 19220000),
                            strand = c('+', '-'),
                            t.name = 'target.region',
                            t.len = 0,
                            t.start = c(19200000, 19300000),
                            t.end = c(19250000, 19330000),
                            n.match = 0,
                            aln.len = 0,
                            mapq = 0)
## Add self-alignments to the plot
addSelfAlignments(ggplot.obj = plt, paf.table = paf.annot, coordinate.space = 'target')

}
\author{
David Porubsky
}
