% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotAVA.R
\name{plotAVA}
\alias{plotAVA}
\title{Plot all-versus-all alignments stored in PAf format.}
\usage{
plotAVA(
  paf.table,
  seqnames.order = NULL,
  min.deletion.size = NULL,
  min.insertion.size = NULL,
  highlight.sv = NULL,
  binsize = NULL,
  color.by = "direction",
  perc.identity.breaks = c(90, 95, 99, 99.5, 99.6, 99.7, 99.8, 99.9),
  color.palette = NULL,
  outline.alignments = FALSE
)
}
\arguments{
\item{paf.table}{A \code{data.frame} or \code{tibble} containing a single or multiple PAF record(s) with 12 mandatory columns
along with CIGAR string defined in 'cg' column.}

\item{seqnames.order}{A user defined order sequence names to be plotted from top to the bottom.}

\item{min.deletion.size}{A minimum size (in base pairs) of a deletion to be retained.}

\item{min.insertion.size}{A minimum size (in base pairs) of an insertion to be retained.}

\item{highlight.sv}{Visualize alignment embedded structural variation either as an outlined ('outline') or filled ('fill') miropeats.}

\item{binsize}{A size of a bin in base pairs to split a PAF alignment into.}

\item{color.by}{Color alignments either by directionality ('direction'), fraction of matched base pairs ('identity'),
or a custom column name present in submitted `paf.table`.}

\item{perc.identity.breaks}{Set of percentage values to categorize alignment percent identity into a set of discrete colors.}

\item{color.palette}{A discrete color palette defined as named character vector (elements = colors, names = discrete levels)
to color alignment directionality, `[default: color.palette <- c('-' = 'cornflowerblue', '+' = 'forestgreen')]`.}

\item{outline.alignments}{Set to \code{TRUE} if boundaries of each alignment should be highlighted by gray outline.}
}
\value{
A \code{list} of miropeat style plots.
}
\description{
This function takes PAF output file from minimap2 reporting all-versus-all alignments of multiple FASTA sequences
and visualize the alignments in a miropeat style.
}
\examples{
## Get PAF to plot
paf.file <- system.file("extdata", "test_ava.paf", package = "SVbyEye")
## Read in PAF
paf.table <- readPaf(paf.file = paf.file, include.paf.tags = TRUE, restrict.paf.tags = "cg")
## Make a plot
## Color by alignment directionality
plotAVA(paf.table = paf.table, color.by = "direction")
## Color by fraction of matched bases in each alignment
plotAVA(paf.table = paf.table, color.by = "identity")
## Define custom sample order
seqnames.order <- c("HG00438_2", "HG01358_2", "HG02630_2", "HG03453_2")
plotAVA(paf.table = paf.table, color.by = "direction", seqnames.order = seqnames.order)
## Only samples present in custom sample order are being plotted
seqnames.order <- c("HG00438_2", "HG01358_2", "HG03453_2")
plotAVA(paf.table = paf.table, color.by = "direction", seqnames.order = seqnames.order)
## Outline PAF alignments
plotAVA(paf.table = paf.table, outline.alignments = TRUE)
## Highlight structural variants
plotAVA(
    paf.table = paf.table, min.deletion.size = 1000, min.insertion.size = 1000,
    highlight.sv = "outline"
)
## Bin PAF alignments into user defined bin and color them by sequence identity (\% of matched bases)
plotAVA(paf.table = paf.table, binsize = 10000)
## Add annotation to all-versus-all alignments ##
plt <- plotAVA(paf.table = paf.table, color.by = 'direction')
annot.file <- system.file("extdata", "test_annot_ava.RData", package="SVbyEye")
annot.gr <- get(load(annot.file))
addAnnotation(ggplot.obj = plt, annot.gr = annot.gr, coordinate.space = 'self', y.label.id = 'ID')

}
\author{
David Porubsky
}
