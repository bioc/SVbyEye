%\VignetteIndexEntry{How to use SVbyEye}
%\VignetteEngine{knitr::knitr}
\documentclass{article}

<<style-knitr, eval=TRUE, echo=FALSE, results='asis'>>=
BiocStyle::latex()
@

\author{David Porubsky\thanks{\email{david.porubsky@gmail.com}}}
\title{How to use SVbyEye}

\begin{document}
\maketitle
\tableofcontents
\clearpage
<<options, results='hide', message=FALSE, eval=TRUE, echo=FALSE>>=
library(SVbyEye)
options(width = 90)
@
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Introduction}
SVbyEye relies on assembly to reference alignments produced by tools such as minimap2 \cite{Li2016-ha} or other tools able to report alignments in a PAF format.

\section{Quickstart}

The main function of this package is called \Rfunction{plotMiro()} and performs all the necessary steps to get from aligned reads in BAMs to predicted breakpoints (changes) in strand directionality. For an unexperienced user we advise to run \Rpackage{SVbyeye}

\subsection{Making a simple plot}

<<eval=TRUE, message=FALSE>>==
## Get PAF to plot
paf.file <- system.file("extdata", "test1.paf",
    package = "SVbyEye"
)
## Read in PAF
paf.table <- readPaf(
    paf.file = paf.file,
    include.paf.tags = TRUE, restrict.paf.tags = "cg"
)
## Make a plot
## Color by alignment directionality
plotMiro(paf.table = paf.table, color.by = "direction")
@

\newpage

\section{Session Info}

<<sessionInfo, results="asis", eval=TRUE>>=
toLatex(sessionInfo())
@

\bibliography{/home/porubsky/SVbyEye/vignettes/references.bib}

\end{document}

